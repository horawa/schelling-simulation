#!/usr/bin/env python3
import os
import schelling.simulation as sim
import schelling.arr_to_img as im
import schelling.utility_functions as ut
import sys

# argv[1] = agent count to verify (e.g. 3 for results3)

result_dir = os.path.join(os.path.expanduser("~"), "results_mut")

tols = [0.125 * x for x in range(9)]
tol_pairs = [(tol1, tol2) for tol1 in tols for tol2 in tols if tol2 > tol1]
tolerances = tol_pairs
vacancy_proportions = [round(0.01 * x, 2) for x in range(100)]
test_nos = range(4)


all_halted = True

def is_halted(test_dir, utility_th):
	files = sorted(os.listdir(test_dir))
	files = list(filter(lambda f: f.endswith(".png"), files))	
	array = im.image_parse(os.path.join(test_dir, files[-1]))
		
	utility_function = [ut.create_flat_utility(u) for u in utility_th]
	return sim.is_simulation_halted(array, utility_function)

def main():
	for v in vacancy_proportions:
		for T in tolerances:
			for test_no in test_nos:
				test_dir = os.path.join(result_dir, "v_"+str(v),
					"T_"+str(T[0])+"_"+str(T[1]), str(test_no))
												

				halted = is_halted(test_dir, T)

				if not halted:
					print("Not halted: " + test_dir, flush=True)
					all_halted = False


	if all_halted:
		print("All halted!", flush=True)

if __name__ == '__main__':
	main()